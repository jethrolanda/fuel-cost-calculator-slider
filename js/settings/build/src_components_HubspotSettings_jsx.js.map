{"version":3,"file":"src_components_HubspotSettings_jsx.js","mappings":"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","sources":["webpack://settings/./src/components/HubspotSettings.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Button, Form, Input, notification, Divider, Skeleton } from \"antd\";\r\n\r\nimport {\r\n  loaded,\r\n  apiKey,\r\n  fetchHubspotAPIKey,\r\n  saveHubspotAPIKey\r\n} from \"../store/reducer/hubspotSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst HubspotSettings = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const openNotificationWithIcon = (type, message, description) => {\r\n    api[type]({\r\n      message,\r\n      description\r\n    });\r\n  };\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  let fetched = useSelector(loaded);\r\n  let api_key = useSelector(apiKey);\r\n\r\n  const validateMessages = {\r\n    required: \"${label} is required!\"\r\n  };\r\n\r\n  const formSubmit = (values) => {\r\n    setLoading(true);\r\n    dispatch(\r\n      saveHubspotAPIKey({\r\n        values,\r\n        cb: (data) => {\r\n          setLoading(false);\r\n          if (data.status === \"success\") {\r\n            openNotificationWithIcon(\r\n              \"success\",\r\n              \"Success\",\r\n              \"Successfully saved.\"\r\n            );\r\n          } else {\r\n            openNotificationWithIcon(\"error\", \"Error\", data?.message);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const errorCheck = () => {\r\n    const fields = form.getFieldsValue();\r\n\r\n    if (fields.site_key === \"\" && fields.secret_key === \"\") {\r\n      openNotificationWithIcon(\r\n        \"error\",\r\n        \"Error\",\r\n        \"Site Key and Secret Key are required.\"\r\n      );\r\n    } else if (fields.site_key === \"\") {\r\n      openNotificationWithIcon(\"error\", \"Error\", \"Site Key is required.\");\r\n    } else if (fields.secret_key === \"\") {\r\n      openNotificationWithIcon(\"error\", \"Error\", \"Secret Key is required.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) dispatch(fetchHubspotAPIKey());\r\n  }, [fetched]);\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      api_key\r\n    });\r\n  }, [api_key]);\r\n\r\n  return fetched === false ? (\r\n    <Skeleton />\r\n  ) : (\r\n    <>\r\n      {contextHolder}\r\n      <Divider orientation=\"left\" orientationMargin=\"0\">\r\n        Hubspot API Settings\r\n      </Divider>\r\n      <p>\r\n        Create api key in hubspot private app. See Link{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          href=\"https://developers.hubspot.com/docs/api/private-apps\"\r\n        >\r\n          here\r\n        </a>\r\n        .\r\n      </p>\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        style={{\r\n          maxWidth: 600\r\n        }}\r\n        validateMessages={validateMessages}\r\n        onFinish={(e) => formSubmit(e)}\r\n      >\r\n        <Form.Item\r\n          label=\"API Key\"\r\n          name=\"api_key\"\r\n          rules={[\r\n            {\r\n              required: true\r\n            }\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\" \">\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            onClick={() => errorCheck()}\r\n            loading={loading}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HubspotSettings;\r\n"],"names":["useState","useEffect","Button","Form","Input","notification","Divider","Skeleton","loaded","apiKey","fetchHubspotAPIKey","saveHubspotAPIKey","useSelector","useDispatch","HubspotSettings","loading","setLoading","api","contextHolder","useNotification","openNotificationWithIcon","type","message","description","form","useForm","dispatch","fetched","api_key","validateMessages","required","formSubmit","values","cb","data","status","errorCheck","fields","getFieldsValue","site_key","secret_key","setFieldsValue","createElement","Fragment","orientation","orientationMargin","target","href","layout","style","maxWidth","onFinish","e","Item","label","name","rules","htmlType","onClick"],"sourceRoot":""}